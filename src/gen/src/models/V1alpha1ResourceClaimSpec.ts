/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.26.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1alpha1ResourceClaimParametersReference,
    V1alpha1ResourceClaimParametersReferenceFromJSON,
    V1alpha1ResourceClaimParametersReferenceFromJSONTyped,
    V1alpha1ResourceClaimParametersReferenceToJSON,
} from './V1alpha1ResourceClaimParametersReference';

/**
 * ResourceClaimSpec defines how a resource is to be allocated.
 * @export
 * @interface V1alpha1ResourceClaimSpec
 */
export interface V1alpha1ResourceClaimSpec {
    /**
     * Allocation can start immediately or when a Pod wants to use the resource. "WaitForFirstConsumer" is the default.
     * @type {string}
     * @memberof V1alpha1ResourceClaimSpec
     */
    allocationMode?: string;
    /**
     * 
     * @type {V1alpha1ResourceClaimParametersReference}
     * @memberof V1alpha1ResourceClaimSpec
     */
    parametersRef?: V1alpha1ResourceClaimParametersReference;
    /**
     * ResourceClassName references the driver and additional parameters via the name of a ResourceClass that was created as part of the driver deployment.
     * @type {string}
     * @memberof V1alpha1ResourceClaimSpec
     */
    resourceClassName: string;
}

export function V1alpha1ResourceClaimSpecFromJSON(json: any): V1alpha1ResourceClaimSpec {
    return V1alpha1ResourceClaimSpecFromJSONTyped(json, false);
}

export function V1alpha1ResourceClaimSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1ResourceClaimSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allocationMode': !exists(json, 'allocationMode') ? undefined : json['allocationMode'],
        'parametersRef': !exists(json, 'parametersRef') ? undefined : V1alpha1ResourceClaimParametersReferenceFromJSON(json['parametersRef']),
        'resourceClassName': json['resourceClassName'],
    };
}

export function V1alpha1ResourceClaimSpecToJSON(value?: V1alpha1ResourceClaimSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allocationMode': value.allocationMode,
        'parametersRef': V1alpha1ResourceClaimParametersReferenceToJSON(value.parametersRef),
        'resourceClassName': value.resourceClassName,
    };
}

